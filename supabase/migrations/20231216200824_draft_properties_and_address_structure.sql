create extension if not exists "postgis" with schema "extensions";


create table "public"."addresses" (
    "id" bigint generated by default as identity not null,
    "location" geography(Point,4326) not null
);


alter table "public"."addresses" enable row level security;

create table "public"."properties" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."properties" enable row level security;

alter table "public"."users" add column "is_onboarded" boolean not null default false;

CREATE INDEX addresses_geo_index ON public.addresses USING gist (location);

CREATE UNIQUE INDEX addresses_pkey ON public.addresses USING btree (id);

CREATE UNIQUE INDEX properties_pkey ON public.properties USING btree (id);

alter table "public"."addresses" add constraint "addresses_pkey" PRIMARY KEY using index "addresses_pkey";

alter table "public"."properties" add constraint "properties_pkey" PRIMARY KEY using index "properties_pkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_organization()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$begin
  RAISE LOG 'organization: %', new;
  RAISE LOG 'user id id: %', auth.uid();
  insert into public.organization_members (organization, "user")
  values (new.id, auth.uid());
  update users
  set is_onboarded = true
  where id = auth.uid();
  return new;
end;$function$
;


